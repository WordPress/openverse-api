name: Build imaginary
on:
  workflow_dispatch:
    inputs:
      deploy-to:
        type: string
        default: null
        description: The environment to deploy to, if a deploy is desired. Currently only `staging` is available.

      deploy-only:
        type: boolean
        default: false
        description: Set to `true` to trigger _just_ a redeployment

jobs:
  build:
    name: Build
    if: github.events.inputs.deploy-only == false
    runs-on: ubuntu-latest
    steps:
      - name: Checkout h2non/imaginary repository
        uses: actions/checkout@v3
        with:
          repository: h2non/imaginary
          path: imaginary

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v1

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1
        with:
          install: true

      - name: Log in to GitHub Docker Registry
        uses: docker/login-action@v1
        with:
          registry: https://ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Setup Go
        uses: actions/setup-go@v3
        with:
          go-version: "1.17"

      - name: Update modules # https://github.com/h2non/imaginary/issues/387
        working-directory: imaginary
        run: |
          sed -i 's/bimg v1.1.4/bimg v1.1.9/' go.mod
          go mod tidy

      - name: Skip tests # https://github.com/golang/go/issues/29948
        working-directory: imaginary
        run: |
          sed -i 's/RUN go test/# RUN go test/' Dockerfile
          sed -i 's/RUN golangci/# RUN golangci/' Dockerfile

      - name: Build image 'imaginary'
        uses: docker/build-push-action@v2
        with:
          context: imaginary
          platforms: linux/arm64,linux/amd64
          cache-from: type=gha,scope=imaginary
          cache-to: type=gha,scope=imaginary
          push: true
          tags: |
            ghcr.io/wordpress/openverse-imaginary:latest

  deploy:
    name: Deploy Imaginary
    runs-on: ubuntu-latest
    if: github.event.inputs.deploy-to != null
    depends-on: [build]

    steps:
      - uses: actions/checkout@v3

      - uses: ./.github/actions/staging-thumbnails-deploy
        if: github.event.inputs.deploy-to == "staging"
        with:
          tag: latest
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          slack-webhook: ${{ secrets.SLACK_WEBHOOK_URL }}
